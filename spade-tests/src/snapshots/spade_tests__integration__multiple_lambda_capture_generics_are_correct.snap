---
source: spade-tests/src/integration.rs
expression: "items.iter().map(| item | format! (\"{item}\")).join(\"\\n\")"
---
entity \test () -> () {
	let e10: uint<8> = Instance(\generic[30] )()
	let a_n24: uint<8> = Alias(e10)
	let e12: uint<8> = Instance(\generic[31] )()
	let b_n25: uint<8> = Alias(e12)
} => e9
entity \generic[30] () -> uint<8> {
	let e3: {} = ConstructTuple()
	let e8: () = ConstructTuple()
	let e2: uint<8> = Instance(\impl_0::call[32] )(e3, e8)
} => e2
entity \generic[31] () -> uint<8> {
	let e3: {} = ConstructTuple()
	let e8: () = ConstructTuple()
	let e2: uint<8> = Instance(\impl_0::call[33] )(e3, e8)
} => e2
entity \impl_0::call[32] ((self, self_n22, {}), (args, args_n23, ())) -> uint<8> {
	const e6: uint<8> = 10
} => e6
entity \impl_0::call[33] ((self, self_n22, {}), (args, args_n23, ())) -> uint<8> {
	const e6: uint<8> = 20
} => e6
