---
source: spade-tests/src/typeinference.rs
---
entity test(clk: clock, rst: bool) -> bool {
    let shift_clock_initial: int<10> = 0b0000011111;
    reg(clk) shift_clock: int<10> reset(rst: shift_clock_initial) = {
        let upper: int<2> = trunc(shift_clock);
        let rest: int<8> = shift_clock >> 2;
        upper `concat` rest
    };
    true
}

error: Expected type int<8>, got int<10>
  ┌─ testinput:5:28
  │
3 │     reg(clk) shift_clock: int<10> reset(rst: shift_clock_initial) = {
  │                               -- Type 10 inferred here
4 │         let upper: int<2> = trunc(shift_clock);
5 │         let rest: int<8> = shift_clock >> 2;
  │                       -    ^^^^^^^^^^^^^^^^ Expected int<8>
  │                       │     
  │                       Type 8 inferred here
  │
  = note: Expected: 8
                in: int<8>
               Got: 10
                in: int<10>

error: Expected type int<10>, got Number<12>
  ┌─ testinput:3:69
  │  
3 │       reg(clk) shift_clock: int<10> reset(rst: shift_clock_initial) = {
  │                                 -- Type 10 inferred here
  │ ╭─────────────────────────────────────────────────────────────────────^
4 │ │         let upper: int<2> = trunc(shift_clock);
5 │ │         let rest: int<8> = shift_clock >> 2;
6 │ │         upper `concat` rest
  │ │         ------------------- Type 12 inferred here
7 │ │     };
  │ ╰─────^ Expected int<10>
  │  
  = note: Expected: 10
                in: int<10>
               Got: 12
                in: Number<12>
