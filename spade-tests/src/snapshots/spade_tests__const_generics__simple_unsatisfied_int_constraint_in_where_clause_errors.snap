---
source: spade-tests/src/const_generics.rs
---
fn add_one<#uint N, #uint O>(in: int<N>) -> int<O>
    where O: { N + 2 }
{
    in + 1
}

fn test() -> int<10> {
    add_one(10i8)
}


error: Output type mismatch. Expected int<10>, got Number<9>
  ┌─ testinput:3:1
  │  
1 │   fn add_one<#uint N, #uint O>(in: int<N>) -> int<O>
  │                                               ------ int<10> type specified here
2 │       where O: { N + 2 }
3 │ ╭ {
4 │ │     in + 1
  │ │     ------ Type 9 inferred here
5 │ │ }
  │ ╰─^ Found type Number<9>
  │  
  = note: Expected: 10
                in: int<10>
               Got: 9
                in: Number<9>
  = The error is in a generic unit instantiated at
    ╰ testinput:8 add_one<8, 10>
