---
source: spade-tests/src/typeinference.rs
---
struct ReadPort_<W> { }

struct port FifoRead<#uint W> { }

entity fifo_read_side<#uint W>(
    write_ptr_w: uint<W>,
    ram_read: ReadPort_<W>,
    read_ptr_wire: ~& uint<W>,
) -> FifoRead<W> {
    FifoRead$()
}

entity fifo<#uint W>(
    ram_read: ReadPort_<W>
) -> FifoRead<W> {
    let read_ptr_wire = inst new_mut_wire();

    let read_ptr_w = inst read_mut_wire(read_ptr_wire);

    let write_ptr_w  = 0;

    let full_w = 0 == read_ptr_w;


    inst fifo_read_side$(
            write_ptr_w,
            ram_read,
            read_ptr_wire,
        )
}

entity fifo_test_harness(
    ram_read: ReadPort_<4>
) {
    let _ = inst fifo::<4>$(ram_read);
}


error: read_ptr_wire is unused
  ┌─ testinput:8:5
  │
8 │     read_ptr_wire: ~& uint<W>,
  │     ^^^^^^^^^^^^^ read_ptr_wire is unused
  │
  = note: read_ptr_wire is a ~& value which must be set
  = The error is in a generic unit instantiated at
    ╰ testinput:25 fifo_read_side<4>
    ╰ testinput:35 fifo<4>
