---
source: spade-tests/src/typeinference.rs
---
use std::mem::clocked_memory_init;
use std::mem::read_memory;

entity test(clk: clock, idx: uint<4>) -> int<8> {
    let mem: Memory<int<8>, 12> = inst clocked_memory_init(clk, [], [5; 10]);
    inst read_memory(mem, idx)
}


error: Expected type Memory<int<8>, 12>, got Memory<int<8>, 10>
  ┌─ testinput:5:35
  │
5 │     let mem: Memory<int<8>, 12> = inst clocked_memory_init(clk, [], [5; 10]);
  │                             --    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  │                             │     │                                     │
  │                             │     │                                     Type 10 inferred here
  │                             │     Expected Memory<int<8>, 12>
  │                             Type 12 inferred here
  │
  = note: Expected: 12
                in: Memory<int<8>, 12>
               Got: 10
                in: Memory<int<8>, 10>
