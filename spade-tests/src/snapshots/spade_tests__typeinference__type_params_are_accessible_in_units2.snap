---
source: spade-tests/src/typeinference.rs
---
mod mem {
    extern fn produce_something<#uint N>() -> int<N>;

    fn test<#uint N>() {
        let a: int<N> = produce_something::<8>();
    }

    fn main() {
        test::<9>()
    }
}


error: Expected type int<9>, got int<8>
  ┌─ testinput:5:25
  │
5 │         let a: int<N> = produce_something::<8>();
  │                         ^^^^^^^^^^^^^^^^^^^^^^^^
  │                         │                   │
  │                         │                   Type 8 inferred here
  │                         Expected int<9>
  ·
9 │         test::<9>()
  │                - Type 9 inferred here
  │
  = note: Expected: 9
                in: int<9>
               Got: 8
                in: int<8>
  = The error is in a generic unit instantiated at
    ╰ testinput:9 mem::test<9>
