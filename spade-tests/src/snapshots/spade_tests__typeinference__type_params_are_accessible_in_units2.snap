---
source: spade-tests/src/typeinference.rs
---
mod mem {
    extern fn produce_something<#uint N>() -> int<N>;

    fn test<#uint N>() {
        let a: int<N> = produce_something::<8>();
    }

    fn main() {
        test::<9>()
    }
}


error: Expected type 8, got 9
  ┌─ testinput:4:5
  │  
4 │ ╭     fn test<#uint N>() {
5 │ │         let a: int<N> = produce_something::<8>();
  │ │                                             - Type 8 inferred here
6 │ │     }
  │ ╰─────^ Expected 8
  ·  
9 │           test::<9>()
  │                  - Type 9 inferred here
  │  
  = note: Expected: 8
               Got: 9
  = The error is in a generic unit instantiated at
    ╰ testinput:9 mem::test<9>
