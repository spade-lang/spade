---
source: spade-tests/src/hir_lowering.rs
---
fn a<#uint N>(x: int<N>, y: int<32>) -> int<33> {
    x + y
}

fn main() -> int<33> {
    let x: int<16> = 0;
    let y: int<32> = 0;
    a(x, y)
}


error: Expected type 32, got 16
  ┌─ testinput:1:1
  │  
1 │ ╭ fn a<#uint N>(x: int<N>, y: int<32>) -> int<33> {
  │                                   -- Type 32 inferred here
2 │ │     x + y
3 │ │ }
  │ ╰─^ Expected 32
  ·  
6 │       let x: int<16> = 0;
  │                  -- Type 16 inferred here
  │  
  = note: Expected: 32
               Got: 16
  = The error is in a generic unit instantiated at
    ╰ testinput:8 a<16>
