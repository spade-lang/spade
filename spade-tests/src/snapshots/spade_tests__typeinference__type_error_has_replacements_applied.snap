---
source: spade-tests/src/typeinference.rs
---
entity counter(clk: clock, rst: bool) -> (int<8>, int<8>) {
    decl x, y;

    let x_at_max = x == 8;
    let y_at_max = y == 6;

    reg(clk) x reset (rst: 0) =
        if x_at_max {
            x
        }
        else {
            x + 1
        };

    reg(clk) y reset (rst: 0) = {
            y
        };

    (x, y)
}


error: Expected type Number<8>, got Number<9>
   ┌─ testinput:12:13
   │  
 1 │   entity counter(clk: clock, rst: bool) -> (int<8>, int<8>) {
   │ ╭───────────────────────────────────────────────────────────'
 2 │ │     decl x, y;
 3 │ │ 
 4 │ │     let x_at_max = x == 8;
   · │
12 │ │             x + 1
   │ │             ^^^^^ Expected Number<8>, got Number<9>
   · │
19 │ │     (x, y)
20 │ │ }
   │ ╰─' The error occurred when unifying types here
   │  
   = note: Expected: 8
                 in: Number<8>
                Got: 9
                 in: Number<9>
   = note: Addition creates one more output bit than the input to avoid overflow
